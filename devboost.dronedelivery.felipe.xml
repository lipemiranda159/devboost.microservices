<?xml version="1.0"?>
<doc>
    <assembly>
        <name>devboost.dronedelivery.felipe</name>
    </assembly>
    <members>
        <member name="T:devboost.dronedelivery.felipe.Controllers.ClienteController">
            <summary>
            Controller com ações referentes aos clientes
            </summary>
        </member>
        <member name="M:devboost.dronedelivery.felipe.Controllers.ClienteController.#ctor(devboost.dronedelivery.felipe.EF.Repositories.Interfaces.IClienteRepository)">
            <summary>
            Constructor
            </summary>
            <param name="clienteRepository"></param>
        </member>
        <member name="M:devboost.dronedelivery.felipe.Controllers.ClienteController.Get">
            <summary>
            Retorna lista de clientes cadastrados no banco
            </summary>
            <returns>Uma lista de clientes</returns>
        </member>
        <member name="M:devboost.dronedelivery.felipe.Controllers.ClienteController.Post(devboost.dronedelivery.felipe.DTO.Models.Cliente)">
             <summary>
             Cria um novo cliente
             </summary>
             <param name="cliente">Modelo cliente</param>
             <remarks>
            Exemplo:
            
                 POST /api/cliente
                 {
                  "nome": "Joao",
                  "latitude": -23.5631043,
                  "longitude": -46.6565712,
                  "userId": "joao",
                  "password": "1234"
                 }
            
             </remarks>        
             <returns>O novo cliente</returns>
        </member>
        <member name="T:devboost.dronedelivery.felipe.Controllers.DronesController">
            <summary>
            Controller com ações referentes aos drones
            </summary>
        </member>
        <member name="M:devboost.dronedelivery.felipe.Controllers.DronesController.#ctor(devboost.dronedelivery.felipe.Facade.Interface.IDroneFacade)">
            <summary>
            Constructor
            </summary>
            <param name="droneFacade"></param>
        </member>
        <member name="M:devboost.dronedelivery.felipe.Controllers.DronesController.GetStatusDrone">
            <summary>
            Retorna status dos drones
            </summary>
            <returns></returns>
        </member>
        <member name="M:devboost.dronedelivery.felipe.Controllers.DronesController.PostDrone(devboost.dronedelivery.felipe.DTO.Models.Drone)">
             <summary>
             Adiciona um novo drone
             </summary>
             <param name="drone"></param>
            <remarks>
            Exemplo:
            
                 POST /api/drone
                 {
                     "capacidade": 100,
                     "velocidade": 100,
                     "autonomia": 100,
                     "carga": 100,
                 }
             </remarks>
             <returns>O novo drono</returns>
        </member>
        <member name="T:devboost.dronedelivery.felipe.Controllers.LoginController">
            <summary>
            Controller com operações referentes aos drones
            </summary>
        </member>
        <member name="T:devboost.dronedelivery.felipe.Controllers.PagamentoController">
            <summary>
            Pagamento controller
            </summary>
        </member>
        <member name="M:devboost.dronedelivery.felipe.Controllers.PagamentoController.#ctor(devboost.dronedelivery.felipe.Facade.Interface.IPagamentoFacade)">
            <summary>
            
            </summary>
            <param name="pagamentoFacade"></param>
        </member>
        <member name="M:devboost.dronedelivery.felipe.Controllers.PagamentoController.AtualizaLista(System.Collections.Generic.List{devboost.dronedelivery.felipe.DTO.PagamentoStatusDto})">
            <summary>
            Controller para recebimento de status de pagamento
            </summary>
            <param name="listaPagamentos"></param>
        </member>
        <member name="T:devboost.dronedelivery.felipe.Extensions.ServiceCollectionExtensions">
            <summary>
            Service Collection extensions
            </summary>
        </member>
        <member name="M:devboost.dronedelivery.felipe.Extensions.ServiceCollectionExtensions.AddScopedServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add services from project
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:devboost.dronedelivery.felipe.Extensions.ServiceCollectionExtensions.ConfigureCors(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add services from project
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:devboost.dronedelivery.felipe.Extensions.ServiceCollectionExtensions.AddAuthServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:devboost.dronedelivery.felipe.Extensions.ServiceCollectionExtensions.AddDbService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:devboost.dronedelivery.felipe.Extensions.ServiceCollectionExtensions.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
        </member>
    </members>
</doc>
